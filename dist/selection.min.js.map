{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/selection.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","eventListener","method","elements","events","fn","elements_","options","arguments","length","undefined","HTMLCollection","NodeList","Array","from","isArray","element","event","assign","capture","slice","on","off","unitify","val","unit","css","el","attr","style","prop","cssStyleDeclaration","dw","document","defaultView","getComputedStyle","utils_intersects","a","b","bxc","left","width","byc","top","height","right","bottom","selectAll","selector","nodes","sel","push","querySelectorAll","eventPath","evt","path","composedPath","target","parentElement","removeElement","arr","index","indexOf","splice","simplifyEvent","tap","touches","x","clientX","y","clientY","isElement","HTMLElement","nodeType","nodeName","__webpack_exports__","selection_Selection","[object Object]","this","class","startThreshold","disableTouch","singleClick","containers","selectables","startareas","boundaries","selectionAreaContainer","scrollSpeedDivider","validateStart","console","log","selection","eventName","areaElement","originalEvent","selectedElements","changedElements","selectionFilter","selectedStore","createElement","clippingElement","scrollAvailable","scrollSpeed","areaStartX","areaStartY","areaEndX","areaEndY","touchedElements","utils","utils_namespaceObject","version","init","onTapMove","onTapStart","onTapStop","onSingleTap","manualScroll","delayedTapMove","querySelector","appendChild","position","overflow","transform","pointerEvents","enable","type","passive","e","_utils$simplifyEvent","targetBondaryClientRect","getBoundingClientRect","startAreas","evtpath","find","includes","resolveSelectables","targetContainer","targetBoundary","added","removed","Math","round","scrollHeight","scrollWidth","filter","contains","_this$targetBoundary","marginTop","marginLeft","classList","add","preventDefault","dispatchEvent","_utils$simplifyEvent3","abs","_utils$simplifyEvent4","redrawArea","updatedTouchingElements","scrollContainer","scroll","scrollTop","scrollLeft","ceil","requestAnimationFrame","deltaX","deltaY","changedTouches","TouchList","targetTouches","_this$targetContainer","clientHeight","clientWidth","boundaryRect","min","max","noEvent","touched","changed","areaRect","intersects","selectable","dispatchFilterEvent","touchedElement","additional","concat","container","Selection","keepEvent","bindStartEvents","disable","removeChild"],"mappings":"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","file":"selection.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Selection\"] = factory();\n\telse\n\t\troot[\"Selection\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Mode, CSSWriteableStyleDeclarationProperties, Subtype } from \"./types\";\r\n\r\nfunction eventListener(method: \"addEventListener\" | \"removeEventListener\", elements: HTMLCollection | NodeList | Element, events: (keyof GlobalEventHandlersEventMap)[] | keyof GlobalEventHandlersEventMap, fn: EventListener, options: Object = {}) {\r\n\r\n    let elements_: Iterable<Subtype<Node, Function>>\r\n    // Normalize array\r\n    if (elements instanceof HTMLCollection || elements instanceof NodeList) {\r\n        elements_ = Array.from(<HTMLCollection | NodeList>elements);\r\n    } else if (!Array.isArray(elements)) {\r\n        elements_ = [elements];\r\n    }\r\n\r\n    if (!Array.isArray(events)) events = [events];\r\n\r\n    for (const element of elements_) {\r\n        for (const event of events) {\r\n            element[method](event, fn, {capture: false, ...options});\r\n        }\r\n    }\r\n\r\n    return Array.prototype.slice.call(arguments, 1);\r\n}\r\n\r\n/**\r\n * Add event(s) to element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const on = eventListener.bind(null, 'addEventListener');\r\n\r\n/**\r\n * Remove event(s) from element(s).\r\n * @param elements DOM-Elements\r\n * @param events Event names\r\n * @param fn Callback\r\n * @param options Optional options\r\n * @return Array passed arguments\r\n */\r\nexport const off = eventListener.bind(null, 'removeEventListener');\r\n\r\nconst unitify = (val: string | number, unit = 'px') => typeof val === 'number' ? val + unit : '' + val;\r\n\r\n/**\r\n * Add css to a DOM-Element or returns the current\r\n * value of a property.\r\n *\r\n * @param el The Element.\r\n * @param attr The attribute or a object which holds css key-properties.\r\n * @param val The value for a single attribute.\r\n * @returns {*}\r\n */\r\nexport function css(el: HTMLElement, attr: {[key in CSSWriteableStyleDeclarationProperties]?: string | number } | CSSWriteableStyleDeclarationProperties | null, val: number | string = null) {\r\n\r\n    // what the heck is this function \r\n\r\n    const style = el && el.style;\r\n    if (!style) return; //undefined\r\n\r\n    if (typeof attr === 'object') {\r\n\r\n        for (let prop in attr) {\r\n            style[<CSSWriteableStyleDeclarationProperties>prop] = unitify(attr[<CSSWriteableStyleDeclarationProperties>prop]);\r\n        }\r\n        // undefined\r\n    } else if (val == null) {\r\n\r\n        let cssStyleDeclaration: CSSStyleDeclaration\r\n        const dw = document.defaultView;\r\n        if (dw && dw.getComputedStyle) {\r\n            cssStyleDeclaration = dw.getComputedStyle(el, null);\r\n        } \r\n        // IE6 - deprecated as outdated and unsecure - no need to support\r\n        // else if (el.currentStyle) {\r\n        //     val = el.currentStyle;\r\n        // }\r\n\r\n        return attr == null ? cssStyleDeclaration : cssStyleDeclaration[attr]; // CSSStyleDeclaration | string | number\r\n    } else {\r\n        style[attr] = unitify(val);\r\n        // undefined\r\n    }\r\n}\r\n\r\n/**\r\n * Check if two DOM-Elements intersects each other.\r\n * @param a BoundingClientRect of the first element.\r\n * @param b BoundingClientRect of the second element.\r\n * @param mode Options are center, cover or touch.\r\n * @returns {boolean} If both elements intersects each other.\r\n */\r\nexport function intersects(a: ClientRect | DOMRect, b: ClientRect | DOMRect, mode: Mode = 'touch') {\r\n\r\n    if (mode === 'center') {\r\n        const bxc = b.left + b.width / 2;\r\n        const byc = b.top + b.height / 2;\r\n\r\n        return bxc >= a.left\r\n            && bxc <= a.right\r\n            && byc >= a.top\r\n            && byc <= a.bottom;\r\n    } else if (mode === 'cover') {\r\n        return b.left >= a.left\r\n            && b.top >= a.top\r\n            && b.right <= a.right\r\n            && b.bottom <= a.bottom;\r\n    } else if (mode === 'touch') {\r\n        return a.right >= b.left\r\n            && a.left <= b.right\r\n            && a.bottom >= b.top\r\n            && a.top <= b.bottom;\r\n    }\r\n}\r\n\r\n/**\r\n * Takes a selector (or array of selectors) and returns the matched nodes.\r\n * @param selector The selector or an Array of selectors.\r\n * @returns {Array} Array of DOM-Nodes.\r\n */\r\nexport function selectAll(selector: string | Array<string>) {\r\n    if (!Array.isArray(selector)) selector = [selector];\r\n\r\n    const nodes: Array<Element> = [];\r\n    for (const sel of selector) {\r\n        nodes.push(...document.querySelectorAll(sel));\r\n    }\r\n\r\n    return nodes;\r\n}\r\n\r\n/**\r\n * Polyfill for safari & firefox for the eventPath event property.\r\n * @param evt The event object.\r\n * @return [String] event path.\r\n */\r\nexport function eventPath(evt: Event) {\r\n    let path = /** evt.path  || */ (evt.composedPath && evt.composedPath()); // again ignore M$\r\n    if (path) return path;\r\n\r\n    // polyfill\r\n    let el = (<Element>evt.target).parentElement\r\n    path = [evt.target, el];\r\n    while (el = el.parentElement) path.push(el);\r\n\r\n    path.push(document, window);\r\n    return path;\r\n}\r\n\r\n/**\r\n * Removes first instance of element from an Array by reference.\r\n */\r\nexport function removeElement(arr: Array<any>, el: Element) {\r\n    const index = arr.indexOf(el);\r\n    if (~index) arr.splice(index, 1);\r\n}\r\n\r\n\r\nexport function simplifyEvent(evt: MouseEvent | TouchEvent) {\r\n    const tap = ((<TouchEvent>evt).touches && (<TouchEvent>evt).touches[0]) || <MouseEvent>evt;\r\n    return {\r\n        tap,\r\n        x: tap.clientX,   \r\n        y: tap.clientY,\r\n        target: <Element>tap.target\r\n    };\r\n}\r\n\r\n/**\r\n * Checks if value is likely a DOM element.\r\n */\r\nexport function isElement(value: any) {\r\n    return (\r\n        typeof HTMLElement === \"object\"\r\n            ? value instanceof HTMLElement\r\n            : typeof value === \"object\" && value !== null && value.nodeType === 1 && typeof value.nodeName === \"string\"\r\n    );\r\n}","/**\r\n * Selection, library to realize visual DOM-Selection like on your Desktop.\r\n *\r\n * @author  Simon Reinisch - TypeScripted: Samuel Ueberle\r\n * @license MIT\r\n */\r\nimport {Options, Utils, ChangedElements} from './types'\r\nimport * as utils from './utils'\r\n\r\n\r\n\r\n\r\nexport class Selection {\r\n\r\n    \r\n\r\n    private options: Options = {\r\n        class: 'selection-area',\r\n        startThreshold: 10,\r\n        disableTouch: false,\r\n        mode: 'touch',\r\n        singleClick: true,\r\n        containers: [],\r\n        selectables: [],\r\n        startareas: ['html'],\r\n        boundaries: ['html'],\r\n        selectionAreaContainer: 'body',\r\n        scrollSpeedDivider: 10,\r\n        validateStart(evt) {\r\n            evt; // MouseEvent or TouchEvent\r\n            console.log(evt)\r\n            return true;\r\n        },\r\n        onStart(evt) {\r\n            evt.selection;\r\n            evt.eventName;\r\n            evt.areaElement;\r\n            evt.originalEvent;\r\n            evt.selectedElements;\r\n            evt.changedElements;\r\n        },\r\n        onSelect(evt) {\r\n        evt.target; // Clicked element\r\n        },\r\n        onMove(evt) {\r\n        },\r\n        onStop(evt) {\r\n        },\r\n        selectionFilter(evt) {\r\n            evt.selection; // This selection instance\r\n            evt.eventName; // The event name\r\n            evt.element;   // The element which is in the current selection\r\n            return true\r\n        }\r\n    }\r\n    private selectedStore: any[]\r\n    = []\r\n    private areaElement: HTMLDivElement\r\n    = document.createElement('div')\r\n    private clippingElement: HTMLDivElement \r\n    = document.createElement('div')\r\n    private scrollAvailable: boolean \r\n    = true\r\n    private scrollSpeed: {x: number, y: number} \r\n    = {x: null, y: null}\r\n    private selectionAreaContainer: Element = null\r\n    private areaStartX: number = 0\r\n    private areaStartY: number = 0\r\n    private areaEndX: number = 0\r\n    private areaEndY: number = 0\r\n    private boundaries: Element[] = []\r\n    private touchedElements: Element[] = []\r\n    private targetBoundary:  ClientRect | DOMRect\r\n    private targetContainer: Element\r\n    private selectables: Element[]\r\n    private singleClick: boolean = false\r\n    private changedElements: ChangedElements\r\n\r\n    constructor(options: Options){\r\n        if(options)\r\n        Object.assign(this.options, options)\r\n        console.log(options, this.options)\r\n        this.init()\r\n    }\r\n\r\n\r\n    private init() {\r\n\r\n\r\n        this.onTapMove = this.onTapMove.bind(this)\r\n        this.onTapStart = this.onTapStart.bind(this)\r\n        this.onTapStop = this.onTapStop.bind(this)\r\n        this.onSingleTap = this.onSingleTap.bind(this)\r\n        this.manualScroll = this.manualScroll.bind(this)\r\n        this.delayedTapMove = this.delayedTapMove.bind(this)\r\n        \r\n        \r\n        // Append area to container\r\n        if (utils.isElement(this.options.selectionAreaContainer)) {\r\n            this.selectionAreaContainer = <Element>this.options.selectionAreaContainer;\r\n        } else {\r\n            this.selectionAreaContainer = document.querySelector(<string>this.options.selectionAreaContainer);\r\n        }\r\n\r\n        this.clippingElement.appendChild(this.areaElement);\r\n        this.selectionAreaContainer.appendChild(this.clippingElement);\r\n\r\n        // Apply basic styles to the area element\r\n        utils.css(\r\n            this.areaElement, \r\n            {\r\n                top: 0,\r\n                left: 0,\r\n                position: 'fixed'\r\n            }\r\n        );\r\n\r\n        utils.css(\r\n            this.clippingElement,\r\n            {\r\n                overflow: 'hidden',\r\n                position: 'fixed',\r\n                transform: 'translate3d(0, 0, 0)', // https://stackoverflow.com/a/38268846\r\n                pointerEvents: 'none'\r\n            }\r\n        );\r\n\r\n        this.enable();\r\n    }\r\n\r\n    private bindStartEvents(type: keyof Utils){\r\n        utils[type]\r\n        (document, 'mousedown', this.onTapStart)\r\n        if(!this.options.disableTouch){\r\n            utils[type]\r\n            (document, 'touchstart', this.onTapStart, {passive: false})\r\n        }\r\n    }\r\n    private onTapStart(e: TouchEvent): undefined{\r\n        console.log(this)\r\n        const {x, y, target} = utils.simplifyEvent(e)\r\n        const targetBondaryClientRect = target.getBoundingClientRect()\r\n\r\n        if(!this.options.validateStart(e)){\r\n            return undefined;\r\n        }\r\n\r\n        const startAreas = utils.selectAll(this.options.startareas)\r\n        this.boundaries = utils.selectAll(this.options.boundaries)\r\n\r\n        const evtpath = utils.eventPath(e)\r\n        if(\r\n            !startAreas.find(el => evtpath.includes(el)) ||\r\n            !this.boundaries.find(el => evtpath.includes(el))\r\n        ) return undefined;\r\n\r\n        this.areaStartX = x;\r\n        this.areaStartY = y;\r\n            console.log(x, y, this.areaStartX, this.areaStartY)\r\n        this.areaEndX = 0;\r\n        this.areaEndY = 0;\r\n\r\n        this.singleClick = true\r\n\r\n        this.resolveSelectables()\r\n\r\n        this.targetContainer = this.boundaries.find(\r\n            el => utils.intersects(\r\n                el.getBoundingClientRect(),\r\n                targetBondaryClientRect\r\n            )\r\n        )\r\n\r\n        this.targetBoundary = this.targetContainer.getBoundingClientRect()\r\n        this.touchedElements = []\r\n        this.changedElements = {\r\n            added: [],\r\n            removed: []\r\n        }\r\n\r\n        if(\r\n            Math.round(\r\n                this.targetContainer.scrollHeight\r\n            ) \r\n            !== Math.round(\r\n                this.targetBoundary.height\r\n            ) ||\r\n            Math.round(\r\n                this.targetContainer.scrollWidth\r\n            )\r\n            !== Math.round(\r\n                this.targetBoundary.width\r\n            )\r\n        ) {\r\n            this.scrollAvailable = true\r\n\r\n            \r\n            utils.on(window, 'wheel', this.manualScroll)\r\n            this.selectables = this.selectables.filter(s => this.targetContainer.contains(s))\r\n\r\n            let {top, left, width, height} = this.targetBoundary\r\n            utils.css(\r\n                this.clippingElement, {\r\n                    \"top\": top, \r\n                    left, width, height\r\n                }\r\n            )\r\n\r\n            utils.css(\r\n                this.areaElement, {\r\n                    marginTop: -top,\r\n                    marginLeft: -left\r\n                }\r\n            )\r\n        } else {\r\n            this.scrollAvailable = false\r\n\r\n            utils.css(\r\n                this.clippingElement,\r\n                {\r\n                    top: 0,\r\n                    left: 0,\r\n                    width: '100%',\r\n                    height: '100%'\r\n                }\r\n            )\r\n            utils.css(\r\n                this.areaElement, {\r\n                    marginTop: 0,\r\n                    marginLeft: 0\r\n                }\r\n            )\r\n        }\r\n\r\n        this.areaElement.classList.add(this.options.class);\r\n\r\n        \r\n        utils.on(document, 'mousemove', this.delayedTapMove)\r\n        utils.on(document, 'touchmove', this.delayedTapMove, {\r\n            passive: false\r\n        })\r\n\r\n        \r\n        utils.on(document, ['mouseup', 'touchcancel', 'touchend'], this.onTapStop)\r\n\r\n        e.preventDefault()\r\n    }\r\n    private onSingleTap(e: TouchEvent): void{\r\n        let {target} = utils.simplifyEvent(e)\r\n\r\n        while(this.selectables.includes(target)){\r\n            if(target.parentElement){\r\n                target = target.parentElement\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n\r\n        this.touchedElements.push(target);\r\n        this.dispatchEvent('onSelect', e, {target})\r\n    }\r\n    private delayedTapMove(e: TouchEvent){\r\n        let {x , y} = utils.simplifyEvent(e)\r\n\r\n        if(Math.abs(x + y) - (this.areaStartX + this.areaStartY) >= this.options.startThreshold){\r\n\r\n            utils.off(document, ['mousemove', 'touchmove'], this.delayedTapMove);\r\n            utils.on(document, ['mousemove', 'touchmove'], this.onTapMove);\r\n            utils.css(\r\n                this.areaElement,\r\n                'display',\r\n                'block'\r\n            )\r\n            this.onTapMove(e)\r\n            this.dispatchEvent('onStart', e)\r\n            this.singleClick = false\r\n        }\r\n    }\r\n    private onTapMove(e: TouchEvent){\r\n        let {x , y} = utils.simplifyEvent(e)\r\n        this.areaEndX = x;\r\n        this.areaEndY = y;\r\n        \r\n        if(this.scrollAvailable && (this.scrollSpeed.y !== null || this.scrollSpeed.x !== null)){\r\n            const scrollContainer = this.targetContainer\r\n            \r\n            let scroll = (t: number):void => {\r\n        \r\n                if(this.scrollSpeed.y === null && this.scrollSpeed.x === null){\r\n        \r\n                    return undefined;\r\n                }\r\n        \r\n                const {scrollTop, scrollLeft} = scrollContainer\r\n                if(this.scrollSpeed.y !== null){\r\n                    scrollContainer.scrollTop += Math.ceil(this.scrollSpeed.y / this.options.scrollSpeedDivider)\r\n                    this.areaStartY -= scrollContainer.scrollTop - scrollTop\r\n                }\r\n\r\n                if(this.scrollSpeed.x !== null){\r\n                    scrollContainer.scrollLeft += Math.ceil(this.scrollSpeed.x / this.options.scrollSpeedDivider)\r\n                    this.areaStartX -= scrollContainer.scrollLeft - scrollLeft\r\n                }\r\n\r\n                this.redrawArea()\r\n                this.updatedTouchingElements()\r\n                this.dispatchEvent('onMove', e)\r\n\r\n                requestAnimationFrame(scroll.bind(this))\r\n            }\r\n            requestAnimationFrame(scroll.bind(this))\r\n        } else {\r\n\r\n            this.redrawArea()\r\n            this.updatedTouchingElements()\r\n            this.dispatchEvent('onMove', e)\r\n        }\r\n    }\r\n    private manualScroll(e: WheelEvent){\r\n\r\n        this.scrollSpeed.x += this.options.scrollSpeedDivider * e.deltaX\r\n        this.scrollSpeed.y += this.options.scrollSpeedDivider * e.deltaY\r\n        this.onTapMove(\r\n            <TouchEvent>Object.assign(\r\n                e, \r\n                {\r\n                    changedTouches: new TouchList(),\r\n                    targetTouches: new TouchList(),\r\n                    touches:  new TouchList()\r\n                }\r\n            )\r\n        )\r\n        e.preventDefault()\r\n    }\r\n    private redrawArea(){\r\n        const {\r\n            scrollHeight,\r\n            scrollWidth,\r\n            scrollLeft,\r\n            scrollTop,\r\n            clientHeight,\r\n            clientWidth,\r\n        } = this.targetContainer    \r\n\r\n        const boundaryRect = this.targetBoundary\r\n        let x = this.areaEndX, y = this.areaEndY\r\n\r\n        if(x < boundaryRect.left){\r\n            this.scrollSpeed.x = scrollLeft ? -Math.abs(boundaryRect.left - x) : null\r\n            x = boundaryRect.left\r\n        } else\r\n        if(x > boundaryRect.left + boundaryRect.width){\r\n            this.scrollSpeed.x = scrollWidth - scrollLeft - clientWidth ? Math.abs(boundaryRect.left + boundaryRect.width - x) : null\r\n            x = boundaryRect.left + boundaryRect.width\r\n        } else\r\n        if(true){\r\n            this.scrollSpeed.x = null\r\n        }\r\n        \r\n        if(y < boundaryRect.top){\r\n            this.scrollSpeed.y = scrollTop ? -Math.abs(boundaryRect.top - y) : null\r\n            y = boundaryRect.top\r\n        } else\r\n        if(y > boundaryRect.top + boundaryRect.height){\r\n            this.scrollSpeed.y = scrollHeight - scrollTop - clientHeight ? Math.abs(boundaryRect.top + boundaryRect.height - y) : null\r\n            y = boundaryRect.top + boundaryRect.height\r\n        } else\r\n        if(true){\r\n            this.scrollSpeed.y = null\r\n        }\r\n            \r\n        utils.css(\r\n            this.areaElement,\r\n            {\r\n                left: Math.min(this.areaStartX, x),\r\n                top: Math.min(this.areaStartY, y),\r\n                width: Math.max(this.areaStartX, x) - Math.min(this.areaStartX, x),\r\n                height: Math.max(this.areaStartY, y) - Math.min(this.areaStartY, y)\r\n            }\r\n        )\r\n    }\r\n    private preventDefault(e: Event){\r\n        e.preventDefault()\r\n    }\r\n    private onTapStop(e: TouchEvent, noEvent: boolean){\r\n\r\n        console.log('tabstop', utils)\r\n        utils.off(\r\n            document,\r\n            ['mousemove', 'touchmove'],\r\n            this.delayedTapMove\r\n        )\r\n        utils.off(\r\n            document,\r\n            ['mousemove', 'touchmove'],\r\n            this.onTapMove\r\n        )\r\n        utils.off(\r\n            document,\r\n            ['mouseup', 'touchcancel', 'touchend'],\r\n            this.onTapStop\r\n        )\r\n\r\n        if(this.singleClick && this.options.singleClick){\r\n            this.onSingleTap(e)\r\n        } else\r\n        if(!this.singleClick && !noEvent){\r\n            this.updatedTouchingElements()\r\n            this.dispatchEvent('onStop', e)\r\n        }\r\n        this.scrollSpeed = {x: null, y: null}\r\n\r\n        utils.off(window, 'wheel', this.manualScroll)\r\n\r\n        utils.off(document, 'selectstart', this.preventDefault(e))\r\n\r\n        utils.css(\r\n            this.areaElement,\r\n            'display',\r\n            'none'\r\n        )\r\n    }\r\n    private updatedTouchingElements(){\r\n        const touched = [], \r\n            changed: ChangedElements = {added: [], removed: []},\r\n            mode = this.options.mode,\r\n            selectables = this.selectables,\r\n            areaRect = this.areaElement.getBoundingClientRect(),\r\n            intersects = utils.intersects\r\n\r\n            for(let selectable of selectables){\r\n\r\n                if(intersects(areaRect, selectable.getBoundingClientRect(), mode)){\r\n                    if(this.dispatchFilterEvent('selectionFilter', selectable) !== false){\r\n\r\n                        if(!this.touchedElements.includes(selectable)){\r\n                            changed.added.push(selectable)\r\n                        }\r\n                        touched.push(selectable)\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(let touchedElement of this.touchedElements){\r\n                if(!touched.includes(touchedElement)){\r\n                    changed.removed.push(touchedElement)\r\n                }\r\n            }\r\n        \r\n            this.touchedElements = touched\r\n            this.changedElements = changed\r\n    }\r\n    private dispatchFilterEvent(eventName: keyof Options, element: Element): boolean {\r\n    \r\n        const event = this.options[eventName]\r\n        if(typeof event === 'function'){\r\n\r\n            return event.call(this, {selection: this, eventName, element})\r\n        }\r\n    }\r\n    private dispatchEvent(eventName: keyof Options, originalEvent: Event, additional?: Object){\r\n        const event = this.options[eventName]\r\n\r\n        if(typeof event === 'function'){\r\n            return event.call(\r\n                this, \r\n                {\r\n                    selection: this,\r\n                    eventName,\r\n                    areaElement: this.areaElement,\r\n                    originalEvent,\r\n                    selectedElements: this.touchedElements.concat(this.selectedStore),\r\n                    changedElements: this.changedElements,\r\n                    ...additional\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    public resolveSelectables(): void{\r\n        this.selectables = utils.selectAll(this.options.selectables)\r\n        const containers = utils.selectAll(this.options.containers)\r\n        for (let container of containers){\r\n            this.selectables.push(...container.querySelectorAll('*'))\r\n        }\r\n    }\r\n    public keepSelection(){\r\n        for(let touchedElement of this.touchedElements){\r\n            if(!this.selectedStore.includes(touchedElement)){\r\n                this.selectedStore.push(touchedElement)\r\n            }\r\n        }\r\n    }\r\n    public clearSelection(){\r\n        this.selectedStore = []\r\n    }\r\n    public removeFromSelection(element: Element){\r\n        utils.removeElement(this.selectedStore, element)\r\n        utils.removeElement(this.touchedElements, element)\r\n    }\r\n    public get Selection(){\r\n\r\n        return this.selectedStore\r\n    }\r\n    public cancel(keepEvent = false){\r\n        this.onTapStop(null, !keepEvent)\r\n    }\r\n    public option(name: keyof Options, value?: any) {\r\n        const {options} = this\r\n        return value == null ? options[name] : (options[name] = value)\r\n    }\r\n    public disable(){\r\n        this.bindStartEvents('off')\r\n    }\r\n    public destroy(){\r\n        this.disable()\r\n        this.selectionAreaContainer.removeChild(this.clippingElement)\r\n    }\r\n    public enable(){\r\n        this.bindStartEvents('on')\r\n    }\r\n    public static create(options?: Options){\r\n        return new Selection(options)\r\n    }\r\n\r\n    public utils: Utils = utils\r\n    public readonly version: string = '0.2.2'\r\n\r\n    \r\n}\r\nexport function create(options?: Options){\r\n    return new Selection(options)\r\n}\r\nexport default Selection"],"sourceRoot":""}